diff --git a/node_modules/bitbox02-api/lib/bitbox02-api-go.js b/node_modules/bitbox02-api/lib/bitbox02-api-go.js
index 5b59502..f821ff7 100644
--- a/node_modules/bitbox02-api/lib/bitbox02-api-go.js
+++ b/node_modules/bitbox02-api/lib/bitbox02-api-go.js
@@ -28724,7 +28724,7 @@ $packages["os"] = (function() {
 						$24r = _r$3;
 						$s = 2; case 2: return $24r;
 						/* */ } return; } if ($f === undefined) { $f = { $blk: $b }; } $f.$24r = $24r; $f._r$3 = _r$3; $f.$s = $s; $f.$r = $r; return $f;
-					}; })(fdi, st)); /* */ $s = 6; case 6: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break s; }
+					}; })(fdi, st)); /* */ $s = 6; case 6: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break; }
 					err = _r$3;
 					typ = (st[0].Mode & 61440) >>> 0;
 					if ($interfaceIsEqual(err, $ifaceNil) && ((typ === 32768) || (typ === 16384))) {
@@ -28743,7 +28743,7 @@ $packages["os"] = (function() {
 		/* if (!($interfaceIsEqual(err$1, $ifaceNil))) { */ case 7:
 			$s = 9; continue;
 		/* } else if (pollable) { */ case 8:
-			_r$4 = syscall.SetNonblock(fdi[0], true); /* */ $s = 10; case 10: if($c) { $c = false; _r$4 = _r$4.$blk(); } if (_r$4 && _r$4.$blk !== undefined) { break s; }
+			_r$4 = syscall.SetNonblock(fdi[0], true); /* */ $s = 10; case 10: if($c) { $c = false; _r$4 = _r$4.$blk(); } if (_r$4 && _r$4.$blk !== undefined) { break; }
 			err$2 = _r$4;
 			if ($interfaceIsEqual(err$2, $ifaceNil)) {
 				f.file.nonblock = true;
@@ -29102,7 +29102,7 @@ $packages["os"] = (function() {
 			$24r = _r$3;
 			$s = 2; case 2: return $24r;
 			/* */ } return; } if ($f === undefined) { $f = { $blk: $b }; } $f.$24r = $24r; $f._r$3 = _r$3; $f.$s = $s; $f.$r = $r; return $f;
-		}; })(fs$1, name)); /* */ $s = 1; case 1: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break s; }
+		}; })(fs$1, name)); /* */ $s = 1; case 1: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break; }
 		err = _r$3;
 		if (!($interfaceIsEqual(err, $ifaceNil))) {
 			$s = -1; return [$ifaceNil, new fs.PathError.ptr("lstat", name[0], err)];
@@ -34569,7 +34569,7 @@ $packages["encoding/json"] = (function() {
 		if (loaded) {
 			$s = -1; return $assertType(fi$1, encoderFunc);
 		}
-		_r$3 = newTypeEncoder(t, true); /* */ $s = 1; case 1: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break s; }
+		_r$3 = newTypeEncoder(t, true); /* */ $s = 1; case 1: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break ; }
 		f[0] = _r$3;
 		wg[0].Done();
 		encoderCache.Store(t, new encoderFunc(f[0]));
@@ -55313,7 +55313,7 @@ $packages["github.com/golang/protobuf/proto"] = (function() {
 				});
 				$s = 7; continue;
 			/* } else { */ case 6:
-				_r$2 = fmt.Sprintf("unsupported map key type: %v", new sliceType$2([new reflect.Kind($clone((0 >= vs.$length ? ($throwRuntimeError("index out of range"), undefined) : vs.$array[vs.$offset + 0]), reflect.Value).Kind())])); /* */ $s = 8; case 8: if($c) { $c = false; _r$2 = _r$2.$blk(); } if (_r$2 && _r$2.$blk !== undefined) { break s; }
+				_r$2 = fmt.Sprintf("unsupported map key type: %v", new sliceType$2([new reflect.Kind($clone((0 >= vs.$length ? ($throwRuntimeError("index out of range"), undefined) : vs.$array[vs.$offset + 0]), reflect.Value).Kind())])); /* */ $s = 8; case 8: if($c) { $c = false; _r$2 = _r$2.$blk(); } if (_r$2 && _r$2.$blk !== undefined) { break ; }
 				$panic(new $String(_r$2));
 			/* } */ case 7:
 		case 1:
@@ -63942,7 +63942,7 @@ $packages["github.com/golang/protobuf/proto"] = (function() {
 		sf = [sf];
 		typ = [typ];
 		unmarshal = [unmarshal];
-		_r$2 = typ[0].Field(0); /* */ $s = 1; case 1: if($c) { $c = false; _r$2 = _r$2.$blk(); } if (_r$2 && _r$2.$blk !== undefined) { break s; }
+		_r$2 = typ[0].Field(0); /* */ $s = 1; case 1: if($c) { $c = false; _r$2 = _r$2.$blk(); } if (_r$2 && _r$2.$blk !== undefined) { break ; }
 		sf[0] = $clone(_r$2, reflect.StructField);
 		field0[0] = toField(sf[0]);
 		$s = -1; return (function(field0, ityp, sf, typ, unmarshal) { return function $b(b, f, w) {
@@ -83712,7 +83712,7 @@ $packages["github.com/digitalbitbox/bitbox02-api-go/api/firmware"] = (function()
 		/* */ if (!($interfaceIsEqual(err, $ifaceNil))) { $s = 2; continue; }
 		/* */ $s = 3; continue;
 		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ case 2:
-			_r$1 = errp.WithStack(err); /* */ $s = 4; case 4: if($c) { $c = false; _r$1 = _r$1.$blk(); } if (_r$1 && _r$1.$blk !== undefined) { break s; }
+			_r$1 = errp.WithStack(err); /* */ $s = 4; case 4: if($c) { $c = false; _r$1 = _r$1.$blk(); } if (_r$1 && _r$1.$blk !== undefined) { break ; }
 			$24r = [sliceType.nil, _r$1];
 			$s = 5; case 5: return $24r;
 		/* } */ case 3:
@@ -84859,34 +84859,34 @@ $packages["github.com/digitalbitbox/bitbox02-api-go/communication/u2fhid"] = (fu
 		}; })(communication);
 		readBuffer = bytes.NewBuffer((new sliceType($stringToBytes(msg))));
 		header = newBuffer();
-		_r = binary.Write(header, (x = binary.BigEndian, new x.constructor.elem(x)), new $Uint32(4278190080)); /* */ $s = 1; case 1: if($c) { $c = false; _r = _r.$blk(); } if (_r && _r.$blk !== undefined) { break s; }
+		_r = binary.Write(header, (x = binary.BigEndian, new x.constructor.elem(x)), new $Uint32(4278190080)); /* */ $s = 1; case 1: if($c) { $c = false; _r = _r.$blk(); } if (_r && _r.$blk !== undefined) { break ; }
 		err = _r;
 		/* */ if (!($interfaceIsEqual(err, $ifaceNil))) { $s = 2; continue; }
 		/* */ $s = 3; continue;
 		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ case 2:
-			_r$1 = errp.WithStack(err); /* */ $s = 4; case 4: if($c) { $c = false; _r$1 = _r$1.$blk(); } if (_r$1 && _r$1.$blk !== undefined) { break s; }
+			_r$1 = errp.WithStack(err); /* */ $s = 4; case 4: if($c) { $c = false; _r$1 = _r$1.$blk(); } if (_r$1 && _r$1.$blk !== undefined) { break; }
 			$24r = _r$1;
 			$s = 5; case 5: return $24r;
 		/* } */ case 3:
-		_r$2 = binary.Write(header, (x$1 = binary.BigEndian, new x$1.constructor.elem(x$1)), new $Uint8(communication[0].cmd)); /* */ $s = 6; case 6: if($c) { $c = false; _r$2 = _r$2.$blk(); } if (_r$2 && _r$2.$blk !== undefined) { break s; }
+		_r$2 = binary.Write(header, (x$1 = binary.BigEndian, new x$1.constructor.elem(x$1)), new $Uint8(communication[0].cmd)); /* */ $s = 6; case 6: if($c) { $c = false; _r$2 = _r$2.$blk(); } if (_r$2 && _r$2.$blk !== undefined) { break; }
 		err$1 = _r$2;
 		/* */ if (!($interfaceIsEqual(err$1, $ifaceNil))) { $s = 7; continue; }
 		/* */ $s = 8; continue;
 		/* if (!($interfaceIsEqual(err$1, $ifaceNil))) { */ case 7:
-			_r$3 = errp.WithStack(err$1); /* */ $s = 9; case 9: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break s; }
+			_r$3 = errp.WithStack(err$1); /* */ $s = 9; case 9: if($c) { $c = false; _r$3 = _r$3.$blk(); } if (_r$3 && _r$3.$blk !== undefined) { break; }
 			$24r$1 = _r$3;
 			$s = 10; case 10: return $24r$1;
 		/* } */ case 8:
-		_r$4 = binary.Write(header, (x$2 = binary.BigEndian, new x$2.constructor.elem(x$2)), new $Uint16((((dataLen & 65535) << 16 >>> 16)))); /* */ $s = 11; case 11: if($c) { $c = false; _r$4 = _r$4.$blk(); } if (_r$4 && _r$4.$blk !== undefined) { break s; }
+		_r$4 = binary.Write(header, (x$2 = binary.BigEndian, new x$2.constructor.elem(x$2)), new $Uint16((((dataLen & 65535) << 16 >>> 16)))); /* */ $s = 11; case 11: if($c) { $c = false; _r$4 = _r$4.$blk(); } if (_r$4 && _r$4.$blk !== undefined) { break; }
 		err$2 = _r$4;
 		/* */ if (!($interfaceIsEqual(err$2, $ifaceNil))) { $s = 12; continue; }
 		/* */ $s = 13; continue;
 		/* if (!($interfaceIsEqual(err$2, $ifaceNil))) { */ case 12:
-			_r$5 = errp.WithStack(err$2); /* */ $s = 14; case 14: if($c) { $c = false; _r$5 = _r$5.$blk(); } if (_r$5 && _r$5.$blk !== undefined) { break s; }
+			_r$5 = errp.WithStack(err$2); /* */ $s = 14; case 14: if($c) { $c = false; _r$5 = _r$5.$blk(); } if (_r$5 && _r$5.$blk !== undefined) { break; }
 			$24r$2 = _r$5;
 			$s = 15; case 15: return $24r$2;
 		/* } */ case 13:
-		_r$6 = send(header.Bytes(), readBuffer); /* */ $s = 16; case 16: if($c) { $c = false; _r$6 = _r$6.$blk(); } if (_r$6 && _r$6.$blk !== undefined) { break s; }
+		_r$6 = send(header.Bytes(), readBuffer); /* */ $s = 16; case 16: if($c) { $c = false; _r$6 = _r$6.$blk(); } if (_r$6 && _r$6.$blk !== undefined) { break; }
 		err$3 = _r$6;
 		if (!($interfaceIsEqual(err$3, $ifaceNil))) {
 			$s = -1; return err$3;
@@ -84895,25 +84895,25 @@ $packages["github.com/digitalbitbox/bitbox02-api-go/communication/u2fhid"] = (fu
 		/* while (true) { */ case 17:
 			/* if (!(readBuffer.Len() > 0)) { break; } */ if(!(readBuffer.Len() > 0)) { $s = 18; continue; }
 			header = newBuffer();
-			_r$7 = binary.Write(header, (x$3 = binary.BigEndian, new x$3.constructor.elem(x$3)), new $Uint32(4278190080)); /* */ $s = 19; case 19: if($c) { $c = false; _r$7 = _r$7.$blk(); } if (_r$7 && _r$7.$blk !== undefined) { break s; }
+			_r$7 = binary.Write(header, (x$3 = binary.BigEndian, new x$3.constructor.elem(x$3)), new $Uint32(4278190080)); /* */ $s = 19; case 19: if($c) { $c = false; _r$7 = _r$7.$blk(); } if (_r$7 && _r$7.$blk !== undefined) { break; }
 			err$4 = _r$7;
 			/* */ if (!($interfaceIsEqual(err$4, $ifaceNil))) { $s = 20; continue; }
 			/* */ $s = 21; continue;
 			/* if (!($interfaceIsEqual(err$4, $ifaceNil))) { */ case 20:
-				_r$8 = errp.WithStack(err$4); /* */ $s = 22; case 22: if($c) { $c = false; _r$8 = _r$8.$blk(); } if (_r$8 && _r$8.$blk !== undefined) { break s; }
+				_r$8 = errp.WithStack(err$4); /* */ $s = 22; case 22: if($c) { $c = false; _r$8 = _r$8.$blk(); } if (_r$8 && _r$8.$blk !== undefined) { break; }
 				$24r$3 = _r$8;
 				$s = 23; case 23: return $24r$3;
 			/* } */ case 21:
-			_r$9 = binary.Write(header, (x$4 = binary.BigEndian, new x$4.constructor.elem(x$4)), new $Uint8(((seq << 24 >>> 24)))); /* */ $s = 24; case 24: if($c) { $c = false; _r$9 = _r$9.$blk(); } if (_r$9 && _r$9.$blk !== undefined) { break s; }
+			_r$9 = binary.Write(header, (x$4 = binary.BigEndian, new x$4.constructor.elem(x$4)), new $Uint8(((seq << 24 >>> 24)))); /* */ $s = 24; case 24: if($c) { $c = false; _r$9 = _r$9.$blk(); } if (_r$9 && _r$9.$blk !== undefined) { break; }
 			err$5 = _r$9;
 			/* */ if (!($interfaceIsEqual(err$5, $ifaceNil))) { $s = 25; continue; }
 			/* */ $s = 26; continue;
 			/* if (!($interfaceIsEqual(err$5, $ifaceNil))) { */ case 25:
-				_r$10 = errp.WithStack(err$5); /* */ $s = 27; case 27: if($c) { $c = false; _r$10 = _r$10.$blk(); } if (_r$10 && _r$10.$blk !== undefined) { break s; }
+				_r$10 = errp.WithStack(err$5); /* */ $s = 27; case 27: if($c) { $c = false; _r$10 = _r$10.$blk(); } if (_r$10 && _r$10.$blk !== undefined) { break; }
 				$24r$4 = _r$10;
 				$s = 28; case 28: return $24r$4;
 			/* } */ case 26:
-			_r$11 = send(header.Bytes(), readBuffer); /* */ $s = 29; case 29: if($c) { $c = false; _r$11 = _r$11.$blk(); } if (_r$11 && _r$11.$blk !== undefined) { break s; }
+			_r$11 = send(header.Bytes(), readBuffer); /* */ $s = 29; case 29: if($c) { $c = false; _r$11 = _r$11.$blk(); } if (_r$11 && _r$11.$blk !== undefined) { break; }
 			err$6 = _r$11;
 			if (!($interfaceIsEqual(err$6, $ifaceNil))) {
 				$s = -1; return err$6;
@@ -84948,7 +84948,7 @@ $packages["github.com/digitalbitbox/bitbox02-api-go/communication/u2fhid"] = (fu
 		/* */ if (!($interfaceIsEqual(err, $ifaceNil))) { $s = 2; continue; }
 		/* */ $s = 3; continue;
 		/* if (!($interfaceIsEqual(err, $ifaceNil))) { */ case 2:
-			_r$1 = errp.WithStack(err); /* */ $s = 4; case 4: if($c) { $c = false; _r$1 = _r$1.$blk(); } if (_r$1 && _r$1.$blk !== undefined) { break s; }
+			_r$1 = errp.WithStack(err); /* */ $s = 4; case 4: if($c) { $c = false; _r$1 = _r$1.$blk(); } if (_r$1 && _r$1.$blk !== undefined) { break ; }
 			$24r = [sliceType.nil, _r$1];
 			$s = 5; case 5: return $24r;
 		/* } */ case 3:
